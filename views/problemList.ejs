<!DOCTYPE html>
<html>
<head>
  <title>Patient Page</title>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"
  integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
  crossorigin="anonymous"></script>
  <script type="text/javascript" src="/files/js/stickyfillmin.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/js/bootstrap-datepicker.js"></script>
  <script type="text/javascript" src="/files/js/pageScript.js"></script>

  <link rel="stylesheet" href="//fonts.googleapis.com/css?family=Nunito"/>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
  integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
  <link rel="stylesheet" href="//fonts.googleapis.com/css?family=Pacifico"/>
  <link rel="stylesheet" type="text/css" href="/files/css/views.css">
  <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/css/datepicker.css" rel="stylesheet" type="text/css" />
</head>
<body> 
  <div class="background">
    <div class="sidebarContainer">
      <div class="row">
        <nav class="col-sm-2 sidebar">
          <div class = "sidebar sticky " >
            <div class = "basicInfo"> 
              <h2 id = "name"><%= data.firstName%> <%= data.lastName%></h2>
              <br>
              <p id="ageSex"> (Age) 19, <%=data.sex%></p>
              <p id="dob"><%= data.birthdate%> </p>
              <p id="weightHeight"> <%= data.weight%> kg, <%= data.height%> cm </p>
              <p id="allergiesSide"> Allergies: (loop patient.allergies[i]) </p>
            </div>
            <ul class="nav nav-pills nav-stacked links">
              <li class="active current"><a href='/patientPage/<%=data.id%>'>Patient Summary</a></li>
              <li><a href="/patientPage/<%=data.id%>/history">Information &amp; History </a></li>
              <li><a href="/patientPage/<%=data.id%>/problemList">Problem List</a></li>
              <li><a href="/patientPage/<%=data.id%>/medications">Medication List</a></li>
              <li><a href="/patientPage/<%=data.id%>/immunization">Immunization Record</a></li>
              <li><a href="/patientPage/<%=data.id%>/allergies">Allergies</a></li>
              <li><a href="/patientPage/<%=data.id%>/wellChildCheck">Well Child Check Page</a></li>
              <li><a href="/patientPage/<%=data.id%>/wellChildCheckForm">Well Child Check Form</a></li>
              <li><a href="/patientPage/<%=data.id%>/testing">Testing</a></li>
              <li><a href="/patientPage/<%=data.id%>/growthCharts">Growth Charts</a></li>
              <li><a href="#section7">Nurse Notes</a></li>
              <li><a href="#section8">Scans</a></li>
            </ul>
          </div>
        </nav>
        <div class="col-lg">   
          <div class = "card header">
           <div class = "topRight">
            <a> Welcome, "*User Name*"  | </a>
            <a href="/" class="btn btn-outline-success"> Logout </a>
          </div>
          <div>
            <a href="/patientSearch" style="text-decoration : none "> <p class = "label" id = "R-plus"> R+ </p>
            <p class = "label" id = "Childrens">Childrens</p> </a>
            <a href="#Pharmacy" class = "top-nav" id = "pharmacy">Pharmacy</a>
            <a href="#AllPatients" class = "top-nav" id = "rec-pat">Recent Patients</a>
            <a href="/patientSearch" class = "top-nav" id = "search-pat">Search Patients</a>
            <a href="/form" class = "top-nav" id = "search-pat">Add Patient</a>
          </div>
        </div>
        <div class = "content-container">
         <div class = "card box summary">
          <h3 class="title"> Problem List </h3>
        </div>
      </div>

      <div id="chronicProb" class="box card section">
        <table class="w3-table-all">
          <div class="subTitle">
           Chronic Problems 
         </div>
         <thead>
          <tr class="w3-light-grey">
            <th>Diagnosis</th>
            <th>Details</th>
            <th>Treatment</th>
            <th>Date of Onset</th>
            <th>Date of Resolution</th>
            <th class="edit">Edit</th>
          </tr>
        </thead>
        <tbody id="chronicTableBody" >
          <tr>
            <td>Developmental Delay</td>
            <td>6 months behind physical</td>
            <td>Physical therapy</td>
            <td>10-10-10</td>
            <td>(cont.)</td>
            <td><button class="editBtn btn">Edit</button></td>
          </tr>
        </tbody>
      </table>
      <form id="chronicForm" class="tr addForm collapse" method="post">
          <span class="td"><input type="text" name="chronicDiagnosis" placeholder="Diagnosis"></span>
          <span class="td"><input type="text" name="chronicDetails" placeholder="Details"></span>
          <span class="td"><input type="text" name="chronicTreatment" placeholder="Treatment"></span>
          <span class="td"><input type="text" name="chronicOnset" class="datepicker form-control" ></span>
          <span class="td"><input type="text" name="chronicResolution" placeholder="Resolution"></span>
          <input type="submit" value="Submit" name="acuteSubmit" class="btn btn-primary formSubmit">
          <input type="button" value="Cancel" name="cancel" class="btn btn-danger formSubmit cancel" data-toggle="collapse" data-target="#chronicForm">
      </form>
      <div>                               
        <button id="addChronicProb" class="add" data-toggle="collapse" data-target="#chronicForm" aria-expanded="false" aria-controls="collapseExample"> + </button>
      </div>
    </div>

    <div id="acuteProb" class="box card section">
      <table class="w3-table-all">
        <div class="subTitle">
         Acute Problems 
       </div>
       <thead>
        <tr class="w3-light-grey">
          <th>Diagnosis</th>
          <th>Details</th>
          <th>Treatment</th>
          <th>Date of Onset</th>
          <th>Date of Resolution</th>
          <th class="edit">Edit</th>
        </tr>
      </thead>
      <tbody id="acuteTableBody" >
      </tbody>
    </table>
    <form id="acuteForm" class="tr addForm collapse" method="post" >
      <span class="td"><input type="text" name="acuteDiagnosis" placeholder="Diagnosis"></span>
      <span class="td"><input type="text" name="acuteDetails" placeholder="Details"></span>
      <span class="td"><input type="text" name="acuteTreatment" placeholder="Treatment"></span>
      <span class="td"><input type="text" name="acuteOnset" class="datepicker form-control" ></span>
      <span class="td"><input type="text" name="acuteResolution" placeholder="Resolution"></span>
      <input type="submit" value="Submit" name="acuteSubmit" class="btn btn-primary formSubmit">
      <input type="button" value="Cancel" name="cancel" class="btn btn-danger formSubmit cancel">
    </form>
    <div>                               
      <button id="addAcuteProb" class="add" data-toggle="collapse" data-target="#acuteForm" aria-expanded="false" aria-controls="collapseExample"> + </button>
    </div>
  </div>
</div>
</body>
<script type="text/javascript">
  var patientId = <%=data.id%>;
  $('document').ready(function() {
    console.log("document.ready ajax call: ");
      // // ajax call to render the original table, where we post to getAllWeights
      // // we return a JSON in which we call updateTable with 
       $.ajax({
           type: "POST",
           url: "/getAllChronic",
           data : {
             id: patientId
           },
           success: function(data) {
             console.log(data);
             if(data.data.length != 0){
              updateTableChronic(data.data[0].chronicEntries);
             }
           }
       });
       $.ajax({
           type: "POST",
           url: "/getAllAcute",
           data : {
             id: patientId
           },
           success: function(data) {
             console.log(data);
             if(data.data.length != 0){
              updateTableAcute(data.data[0].acuteEntries);
             }
           }
       });
      // ajax call that on submit will send the new chronic problem values to the database
      $('#chronicSubmit').click(function(e) {
        e.preventDefault();
        var input = $("#chronicForm").serializeArray();
        console.log("got here: ");
        console.log(input);
        $.ajax({
            type: "POST",
            url: "/chronicProblem",
            data : {
              id: patientId, 
              chronicDiagnosis: input[0].value,
              chronicDetails: input[1].value, 
              chronicTreatment: input[2].value,
              chronicDateOnset: input[3].value,  
              chronicEndDate: input[4].value,  
            },
            success: function(data) {
              console.log("New chronic data: ");
              console.log(data);
              updateTableChronic(data.data[0].chronicEntries);
            }
        });
      });
      $('#acuteSubmit').click(function(e) {
        e.preventDefault();
        var input = $("#acuteForm").serializeArray();
        console.log("got here: ");
        console.log(input);
        $.ajax({
            type: "POST",
            url: "/acuteProblem",
            data : {
              id: patientId, 
              acuteDiagnosis: input[0].value,
              acuteDetails: input[1].value, 
              acuteTreatment: input[2].value,
              acuteDateOnset: input[3].value,  
              acuteEndDate: input[4].value,  
            },
            success: function(data) {
              console.log("New chronic data: ");
              console.log(data);
              updateTableAcute(data.data[0].acuteEntries);
            }
        });
      });
  });
  
  // function that takes in JSON with two fields: height and date and renders the table as such
  var updateTableChronic = function(data) {
       console.log(data);
       var table1 = '';
       for(var i = 0; i < data.length; i++) {
           var line = '<tr><td>' +  data[i].chronicDiagnosis + '</td>';
           line += '<td>' + data[i].chronicDetails + '</td>';
           line += '<td>' + data[i].chronicTreatment + '</td>';
           line += '<td>' + data[i].chronicDateOnset + '</td>';
           line += '<td>' + data[i].chronicEndDate + '</td>';
           line += '<td><button class="editBtn btn">Edit</button></td></tr>';
           table1 += line;
       }
       document.getElementById('chronicTableBody').innerHTML = table1;
  };
  var updateTableAcute = function(data) {
       console.log(data);
       var table1 = '';
       for(var i = 0; i < data.length; i++) {
           var line = '<tr><td>' +  data[i].acuteDiagnosis + '</td>';
           line += '<td>' + data[i].acuteDetails + '</td>';
           line += '<td>' + data[i].acuteTreatment + '</td>';
           line += '<td>' + data[i].acuteDateOnset + '</td>';
           line += '<td>' + data[i].acuteEndDate + '</td>';
           line += '<td><button class="editBtn btn">Edit</button></td></tr>';
           table1 += line;
       }
       document.getElementById('acuteTableBody').innerHTML = table1;
  };

  </script>
</html>
  <!--
  var patientId= JSON.parse('<%=data.id%>');
  console.log('patientID here' + patientId);
  var birthdateNew= new Date('<%=data.birthdate%>').valueOf();
  $('#age').text('Age: ' + getAge(birthdateNew));
  $(document).ready(function(){


    var elements = document.querySelectorAll('.sticky');
    Stickyfill.add(elements);


    // Initial Page Load
    $.ajax({
      type: 'POST',
      url: '/getPatientKeys',
      data: {
        search: '',
        field: 'lastName',
      },
      success: function(result) {
        patients = result.patient;
        getPatientData(result.patient);
      }
    });

    $(function () {
      $('.datepicker').datepicker({ 
        autoclose: true, 
        todayHighlight: true
      }).datepicker('update', new Date());
    });



  // Show and hide buttons and forms on click
  $('form').hide();
  $('.add').on('click', function() {
    $(this).hide();
    $(this).parent().parent().find('.addForm').show();
    setCss(this);

  });

  $('.section').on('click', '.edit', function() {
    $('.edit').hide()
    var row = $(this).parent().parent();
    $(this).parent().parent().attr('id', 'editingRow');
        setCss(this);

    console.log(row)
    row.hide();
  //  editEntry(row);
  editEntryGeneric(row);
    // row.remove();

  });

  

        // Cancel edit and re-display entry
        $('.section').on('click', '.cancelEdit',function(event) {
          console.log('cancel edit')
          var form = '#' + $(this).parent().attr('id');
          $(form).remove();
          $('#editingRow').show();
          $('.edit').show();
          $('#editingRow').removeAttr('id');
        });

        // Cancel new entry
        $('.section').on('click', '.cancel',function(event) {
          var form = '#' + $(this).parent().parent().find('form').attr('id');
          console.log('cancel')
          $(form)[0].reset();
          $(form).hide();
          $(form).parent().find('button').show();
        });

        // Handles deletion of entry
        $('.section').on('click', '.delete',function(event) {
          console.log('delete entry')
          var form = '#' + $(this).parent().attr('id');
          $(form).remove();
          alert('Are you sure you want to delete this entry?')
          $('#editingRow').remove();
          $('.edit').show();
        });

        // Handles for submission for adding new entry
        $('.section').on('submit', '.addForm', function(event) {
          event.preventDefault();
          console.log("on submit");
          var formData = $(this).serializeArray();
          var form = this.id;
          var type = form.substring(0, ((form.length)-4));

          $.ajax({
            type: 'POST',
            url: '/addTest',
            data: { 
              formData,
              form: form,
              type: type
            },

            success: function (result) {
              var form = '#' + result.data.form;
              $(form)[0].reset();
              $(form).hide();
              console.log('add form reset')
              $(form).parent().find('button').show();
              updateTable(result.data, result.data.type);
            },
            error: function(XMLHttpRequest, textStatus, errorThrown) {
              console.error("error: " + errorThrown);
            }
          });

        });

         // Handles for submission for editing existing entry
         $('.section').on('submit', '.editForm', function(event) {
          event.preventDefault();
          console.log("on submit");
          var formData = $(this).serializeArray();
          var form = this.id;
          var type = form.substring(0, ((form.length)-4));

          $.ajax({
            type: 'POST',
            url: '/addTest',
            data: { 
              formData,
              form: form,
              type: type
            },


            success: function (result) {
              console.log(result);
              var form = '#' + result.data.form;
              var hiddenRow = $(form).prev();
              hiddenRow.remove();

              console.log(result.data.type)
              // $(form).hide();
              $('.edit').show();
              $('#editForm').remove();

              updateTable(result.data, result.data.type);

            },
            error: function(XMLHttpRequest, textStatus, errorThrown) {
              console.error("error: " + errorThrown);
            }
          });

        });

       });

  // Not right, need to update based on all data in the patient, not just append as most recent
  var updateTable = function(data, type ) {
    var formData = data.formData;
    var table = '#' + type + 'TableBody'
    var tableData = '<tr>';
    for (i = 0; i < formData.length; i++) {
      tableData += '<td>' + formData[i].value + '</td>'
    }
    tableData += '<td><button class="edit btn">Edit</button></td></tr>'
    $(table).append(tableData);
  }

  var setCss = function(thiss) {
    var form = $(thiss).closest('.section').find('form');
    var formElms = $(form).children('span')
    var items = $(thiss).closest('.section').find('tr').children('th'); 
    for (var i = 0; i < items.length; i++) {
      var width = items[i].offsetWidth.toString() + 'px';
      var elm = formElms[i];
      $(elm).css({'width': width, 'padding': '5px 5px 5px 10px'})
       $(elm).children().css({'background':'#f6f6f7', 'max-width':width,'border-radius':'3px'});
    }
  }

  var editEntryGeneric = function(row) {
    // getting values from row
    var data = [];
    var table = document.getElementById("editingRow"); 
    var cells = table.getElementsByTagName("td");
    for (var i = 0; i < cells.length; i++) {
      data.push(cells[i].innerHTML);
    }
    
    var form = $('#editingRow').closest('.section').find('form')[0].outerHTML;
    $(row).after(form);
    $(row).next().attr('id', 'editForm')

    // getting form input name fields
    var items = $("#editForm :input").map(function(index, elm) {
      return {name: elm.name, type:elm.type, value: $(elm).val()};
    });
    console.log(data)
    console.log(items)
    // setting form name attributes to be same as previous values
    for (var i = 0; i < items.length - 2; i++) {
      // For select boxes
      if (items[i].type === 'select-one') {
        var match = data[i].toString();
        var itemName = items[i].name.toString();
        var name = '[name="' + itemName + '"] option[value="' + match + '"]';
        $(name).attr("selected", "selected")

        // For radio boxes
      } else if (items[i].type === 'radio') {
        var match = data[i].toString();
        var name = '[value="' + match + '"]';
        if (data[i] === 'Yes') {
          $(name).prop('checked', true)
        } else {
          $(name).prop('checked', true)
        }
        // For text boxes and date
      } else {
        var name = '#editForm input[name=' + items[i].name;
        var val = data[i];
        $(name).attr('value', val)
      }

    }
    // finalizing form appearance
    $('#editForm').attr('class', 'tr editForm')
    $('#editForm').show();
    $('#editForm').find("[name='cancel']").attr('class', 'formSubmit cancelEdit')
    $('#editForm').find('.cancelEdit').after('<input type="button" value="Delete" name="delete" class="formSubmit delete"></span>');

  }



  var getPatientData = function(patient) {
    var temp = patient;
    var medication = [{name: 'Cetirizine', dose: '100 mg', time: 'daily 8 am', route: 'PO', start: '1-12-2017', end: '1-12-2019', duration: "2 years"}, {name: 'Cetaphyl', dose: '200 mg', time: 'daily 9 am', route: 'PO', start: '1-12-2016', end: '1-12-2019', duration: "2 years"}];

    var allergies = [{item: 'dairy', severity: 'Mild', note: 'Avoid diary products'}]


    var acute = [{diagnosis: 'fungal infection', treatment: 'Ketanocozole', dose: '1 cc propanol', time: 'BID', route: 'Topical', start: '1-12-2017', end: '1-12-2019', duration: "1 month"}];

    console.log('here:' + patient);
    var cards = "";
    var date = new Date(2018,2,12);
    var i = 1;
    var patient = patient[i];

    $('#allergiesSide').text('Allergies: ' + allergies[0].item );





  };







  function getAge(fromdate, todate){
    if(todate) todate= new Date(todate);
    else todate= new Date();

    var age= [], fromdate= new Date(fromdate),
    y= [todate.getFullYear(), fromdate.getFullYear()],
    ydiff= y[0]-y[1],
    m= [todate.getMonth() + 1, fromdate.getMonth()],
    mdiff= m[0]-m[1],
    d= [todate.getDate(), fromdate.getDate()],
    ddiff= d[0]-d[1];

    if(mdiff < 0 || (mdiff=== 0 && ddiff<0))--ydiff;
    if(mdiff<0) mdiff+= 12;
    if(ddiff<0){
      fromdate.setMonth(m[1]+1, 0);
      ddiff= fromdate.getDate()-d[1]+d[0];
      --mdiff;
    }
    w = Math.floor(ddiff/7);
    ddiff = ddiff % 7;
                  // 3 or older -> show year
                  if (ydiff > 2) age.push(ydiff+ ' year'+(ydiff> 1? 's ':' '));
                  else if (ydiff> 0) {
                    // Over a year -> show year and month
                    age.push(ydiff+ ' year'+(ydiff> 1? 's ':' '));
                    if(mdiff> 0) age.push(mdiff+ ' month'+(mdiff> 1? 's':''));
                    // Less than a year -> show month and day
                  } else if (mdiff> 3) {
                   age.push(mdiff+ ' month'+(mdiff> 1? 's':''));
                   if (w> 0) age.push(w+ ' week' + (w> 1? 's':''));
                 } else if (mdiff>0) {
                  age.push(mdiff+ ' month'+(mdiff> 1? 's ':' '));
                  if(w> 0) age.push(w+ ' week'+(w> 1? 's':''));
                } else {
                  if(w> 0) age.push(w+ ' week'+(w> 1? 's':''));
                  if(ddiff> 0) age.push(ddiff+ ' day'+(ddiff> 1? 's':''));
                }

                if(age.length>1) age.splice(age.length-1,0,' and ');    
                return age.join('');
              }




              */
              


            </script>
          </body>
<!-- patient id =  <%= data.id%>!--> 

